From 0b6956dfd3396ba301ddc2a9d9c72795e2f00fc0 Mon Sep 17 00:00:00 2001
From: ZaneZam <cyxman@yahoo.com>
Date: Mon, 29 Sep 2014 15:45:51 +0200
Subject: [PATCH] Backlight external control v1.0

Control suspend/resume events via external hooks to functions in LM3630
backlight driver.

'hooks' for this version are in the status function of the
TI LM3630 backlight driver for One Plus One devices (drivers/video/backlight/lm3630_bl.c)
check out linux/backlight_ext_control.h file for more details

Credits to andip71 (aka Lord Boeffla) for original dynamic fsync variant
---
 drivers/video/backlight/Kconfig       |  7 +++++
 drivers/video/backlight/lm3630_bl.c   | 45 +++++++++++++++++++++++--------
 fs/dyn_sync_cntrl.c                   |  3 +++
 include/linux/backlight_ext_control.h | 51 +++++++++++++++++++++++++++++++++++
 include/linux/dyn_sync_cntrl.h        |  5 +---
 5 files changed, 96 insertions(+), 15 deletions(-)
 create mode 100644 include/linux/backlight_ext_control.h

diff --git a/drivers/video/backlight/Kconfig b/drivers/video/backlight/Kconfig
index 877dd9e..c3dadb3 100644
--- a/drivers/video/backlight/Kconfig
+++ b/drivers/video/backlight/Kconfig
@@ -367,6 +367,13 @@ config BACKLIGHT_LM3630
 	help
 	  Support for Oppo LM3630 backlight driver
 
+config BACKLIGHT_EXT_CONTROL
+	tristate "Backlight external control in LM3630 driver"
+	depends on I2C
+	help
+	  Control suspend/resume events via external hooks to functions in LM3630
+	  backlight driver.
+
 endif # BACKLIGHT_CLASS_DEVICE
 
 endif # BACKLIGHT_LCD_SUPPORT
diff --git a/drivers/video/backlight/lm3630_bl.c b/drivers/video/backlight/lm3630_bl.c
index 3f1a110..7e7e5e3 100644
--- a/drivers/video/backlight/lm3630_bl.c
+++ b/drivers/video/backlight/lm3630_bl.c
@@ -31,9 +31,9 @@
 #ifdef CONFIG_MACH_OPPO
 #include <linux/boot_mode.h>
 #endif //CONFIG_MACH_OPPO
-#ifdef CONFIG_DYNAMIC_FSYNC
-#include <linux/dyn_sync_cntrl.h>
-#endif	
+#ifdef CONFIG_BACKLIGHT_EXT_CONTROL
+#include <linux/backlight_ext_control.h>
+#endif
 #define REG_CTRL	0x00
 #define REG_CONFIG	0x01
 #define REG_BRT_A	0x03
@@ -53,6 +53,10 @@
 /* OPPO 2013-10-24 yxq Add end */
 #define INT_DEBOUNCE_MSEC	10
 
+#ifdef CONFIG_BACKLIGHT_EXT_CONTROL
+bool backlight_on = false;
+#endif
+
 static struct lm3630_chip_data *lm3630_pchip;
 
 #ifdef CONFIG_BL_REGISTER
@@ -415,17 +419,36 @@ static void lm3630_backlight_unregister(struct lm3630_chip_data *pchip)
 	int ret;
 	struct lm3630_chip_data *pchip = lm3630_pchip;
 	pr_debug("%s: bl=%d\n", __func__,bl_level);
-	
+
+#ifdef CONFIG_BACKLIGHT_EXT_CONTROL
+	// if display is switched off
+	if (bl_level == 0) {
+		// write status to external var for further usage
+		backlight_on = false;
 #ifdef CONFIG_DYNAMIC_FSYNC
-	// if display is switched off, inform dynamic fsync about suspend
-	if (bl_level == 0)
+		// if dynamic fsync is defined call external suspend function
 		dyn_fsync_suspend();
-	
-	// if display is switched on, inform dynamic fsync about resume
-	if (bl_level != 0 && pre_brightness == 0)
+#endif
+#ifdef CONFIG_CPU_FREQ_GOV_ZZMOOVE
+		// if zzmoove governor is defined call external suspend function
+		zzmoove_suspend();
+#endif
+	}
+	// if display is switched on
+	if (bl_level != 0 && pre_brightness == 0) {
+		// write status to external var for further usage
+		backlight_on = true;
+#ifdef CONFIG_DYNAMIC_FSYNC
+		// if dynamic fsync is defined call external resume function
 		dyn_fsync_resume();
-#endif	
-			
+#endif
+#ifdef CONFIG_CPU_FREQ_GOV_ZZMOOVE
+		// if zzmoove governor is defined call external resume function
+		zzmoove_resume();
+#endif
+	}
+#endif
+
 #ifdef CONFIG_MACH_OPPO
 /* Xiaori.Yuan@Mobile Phone Software Dept.Driver, 2014/04/28  Add for add log for 14001 black screen */
 		if(pre_brightness == 0)
diff --git a/fs/dyn_sync_cntrl.c b/fs/dyn_sync_cntrl.c
index dfe5730..ef16518 100644
--- a/fs/dyn_sync_cntrl.c
+++ b/fs/dyn_sync_cntrl.c
@@ -16,6 +16,9 @@
 #include <linux/writeback.h>
 #include <linux/dyn_sync_cntrl.h>
 
+#ifdef CONFIG_BACKLIGHT_EXT_CONTROL
+#include <linux/backlight_ext_control.h>
+#endif
 
 // fsync_mutex protects dyn_fsync_active during suspend / late resume transitions
 static DEFINE_MUTEX(fsync_mutex);
diff --git a/include/linux/backlight_ext_control.h b/include/linux/backlight_ext_control.h
new file mode 100644
index 0000000..c697d01
--- /dev/null
+++ b/include/linux/backlight_ext_control.h
@@ -0,0 +1,51 @@
+/*
+ * include/linux/backlight_ext_control.h
+ *
+ * Backlight External Control v1.0
+ *
+ * Author: Zane Zaminsky <cyxman@yahoo.com>
+ *         Credits to andip71 (alias Lord Boeffla) for original dynamic
+ *         fsync control varaint.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#ifndef _BACKLIGHT_EXT_CONTROL_H
+#define _BACKLIGHT_EXT_CONTROL_H
+
+/*
+ * Below 'hooks' for this version are in the status function of the
+ * TI LM3630 backlight driver for One Plus One devices
+ * (drivers/video/backlight/lm3630_bl.c)
+ */
+
+/*
+ * General flag for external usage
+ * (true = backlight on, false = backlight off)
+ */
+extern bool backlight_on;
+
+/*
+ * External functions:
+ */
+
+// controls file sync depending on screen state in fsync driver
+#ifdef CONFIG_DYNAMIC_FSYNC
+extern void dyn_fsync_resume(void);
+extern void dyn_fsync_suspend(void);
+#endif
+
+// controls suspend/resume state in zzmoove governor
+#ifdef CONFIG_CPU_FREQ_GOV_ZZMOOVE
+extern void zzmoove_suspend(void);
+extern void zzmoove_resume(void);
+#endif
+#endif
diff --git a/include/linux/dyn_sync_cntrl.h b/include/linux/dyn_sync_cntrl.h
index f36ebf2..b60254b 100644
--- a/include/linux/dyn_sync_cntrl.h
+++ b/include/linux/dyn_sync_cntrl.h
@@ -10,7 +10,4 @@
 #define DYN_FSYNC_VERSION_MINOR 6
 
 extern bool suspend_active;
-extern bool dyn_fsync_active;
-
-extern void dyn_fsync_resume(void);
-extern void dyn_fsync_suspend(void);
+extern bool dyn_fsync_active;
\ No newline at end of file
-- 
1.8.4.5

